{"version":3,"sources":["Context/ChatProvider.js","components/authentication/Login.js","components/authentication/Signup.js","Pages/HomePage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/ChatBox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/ChatPage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","children","useState","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","localStorage","getItem","JSON","parse","Provider","value","login","userInfo","push","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","a","title","status","duration","isClosable","position","config","headers","axios","post","data","setItem","stringify","description","response","message","handleGoogle","googleUser","id_token","console","log","token","result","json","spacing","name","id","isRequired","type","placeholder","onChange","e","target","size","width","h","onClick","colorScheme","style","marginTop","isLoading","clientId","render","renderProps","color","disabled","variant","className","d","base","md","px","onSuccess","onFailure","cookiePolicy","scope","Signup","handleClick","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","maxW","centerContent","justifyContent","bg","w","m","borderRadius","borderWidth","textAlign","fontSize","fontFamily","isFitted","mb","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","useDisclosure","isOpen","onOpen","onClose","icon","isCentered","flexDir","alignItems","boxSize","src","alt","ScrollableChat","map","display","label","placement","hasArrow","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","py","pl","UserListItem","_hover","background","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","Authorization","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","ml","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","showEmojiPicker","setShowEmojiPicker","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","io","on","newMessageRecieved","chat","includes","isGroupChat","toUpperCase","overflowY","alignSelf","margin","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","onEmojiClick","emojiObject","mesg","emoji","Chatbox","ChatLoading","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","notif","n","as","Button","removeItem","borderBottomWidth","Chatpage","App","exact","path","component","HomePage","ChatPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e81c6cb1.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState(\" \");\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  const login = (userInfo) => {\n    setUser(userInfo);\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userInfo\")) {\n      setUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    }\n  }, []);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        user,\n        setUser,\n        chats,\n        setChats,\n        selectedChat,\n        setSelectedChat,\n        notification,\n        setNotification,\n        login,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { Text } from \"@chakra-ui/layout\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const { login } = ChatState();\n\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      login(data);\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleGoogle = async (googleUser) => {\n    //const result = res?.profileObj;\n    // const token = res?.tokenId;\n\n    const id_token = googleUser.id_token;\n    console.log(googleUser);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const result = await axios.post(\n        \"/api/user/google-login\",\n        JSON.stringify({\n          token: id_token,\n        }),\n        config\n      );\n\n      const data = await result.json();\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      login(data);\n      history.push(\"/chats\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl name=\"email\" id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl name=\"password\" id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <GoogleLogin\n        clientId=\"995299926946-utu88i48lst4d280mpb33vnojbmbp4nm.apps.googleusercontent.com\"\n        colorScheme=\"blue\"\n        render={(renderProps) => (\n          <Button\n            style={{ marginTop: 15 }}\n            color=\"primary\"\n            width=\"100%\"\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n            variant={\"outline\"}\n          >\n            <i className=\"fa-brands fa-google\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Google Sign In\n            </Text>\n          </Button>\n        )}\n        onSuccess={handleGoogle}\n        onFailure={handleGoogle}\n        cookiePolicy={\"single_host_origin\"}\n        scope=\"https://www.googleapis.com/auth/cloud-platform\"\n      />\n\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\n\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"changge\");\n      fetch(\"https://api.cloudinary.com/v1_1/changge/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      //localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../components/authentication/Login\";\nimport Signup from \"../components/authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) {\n      history.push(\"/chats\");\n    }\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text textAlign=\"center\" fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Reach-Out\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"lottie-react\";\nimport animationData from \"../animations/typing.json\";\nimport Picker from \"emoji-picker-react\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport { MdOutlineAttachFile } from \"react-icons/md\";\nimport { AiOutlineFileGif } from \"react-icons/ai\";\n\nimport { IoMdSend } from \"react-icons/io\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://mern-reach-out-app.herokuapp.com/\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const handleEmojiPickerhideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    let mesg = newMessage;\n    mesg += emojiObject.emoji;\n    setNewMessage(mesg);\n  };\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    //event.key === \"Enter\" &&\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              //onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <Box\n                d=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                bg=\"white\"\n                w=\"100%\"\n                p=\"5px 10px 5px 10px\"\n                borderWidth=\"5px\"\n              >\n                <Input\n                  px={4}\n                  className=\"input-container\"\n                  //variant=\"filled\"\n                  bg=\"#E0E0E0\"\n                  placeholder=\"Enter a message..\"\n                  value={newMessage}\n                  onChange={typingHandler}\n                />\n                <IconButton onClick={sendMessage}>\n                  <IoMdSend />\n                </IconButton>\n              </Box>\n              <Box d=\"flex\" p=\"5px 10px 5px 10px\">\n                <BsEmojiSmile\n                  fontSize=\"10xl\"\n                  px={4}\n                  m={1}\n                  onClick={handleEmojiPickerhideShow}\n                />\n                {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\n                <AiOutlineFileGif fontSize=\"10xl\" px={4} />\n                <MdOutlineAttachFile fontSize=\"10xl\" px={4} />\n              </Box>\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Tooltip, Avatar } from \"@chakra-ui/react\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  //const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/group-rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/group-add`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/group-remove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\n// import \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState(\" \");\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"15px\", md: \"10px\", lg: \"15px\" }}\n            rightIcon={<AddIcon />}\n            size=\"sm\"\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Reach-Out\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult.map((u) => (\n                <UserListItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => accessChat(u._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/ChatBox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport HomePage from \"./Pages/HomePage\";\nimport { Route } from \"react-router-dom\";\nimport ChatPage from \"./Pages/ChatPage\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChakraProvider>\n        <BrowserRouter>\n          <ChatProvider>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/chats\" component={ChatPage} />\n          </ChatProvider>\n        </BrowserRouter>\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}